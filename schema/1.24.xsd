<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        elementFormDefault="qualified"
>

    <xs:element name="phpunuhi">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="imports" type="typeImports" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="php" type="typePHP" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="translations" type="typeTranslations" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="coverage" type="typeCoverage" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="bootstrap" type="xs:string" use="optional"/>
        </xs:complexType>

        <!-- names of Translation-Sets must be unique -->
        <xs:unique name="uniqueSetName">
            <xs:selector xpath="translations/set"/>
            <xs:field xpath="@name"/>
        </xs:unique>

    </xs:element>

    <!-- ================================================================================================================================ -->
    <!-- IMPORTS -->

    <!-- Define complex types -->
    <xs:complexType name="typeImports">
        <xs:sequence>
            <xs:element name="import" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="resource" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- ================================================================================================================================ -->
    <!-- PHP ENV -->

    <xs:complexType name="typePHP">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="env" type="typePHPEnv" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="typePHPEnv">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" type="xs:string" use="required"/>
                <xs:attribute name="value" type="xs:string" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- ================================================================================================================================ -->
    <!-- TRANSLATION-SETS -->

    <xs:complexType name="typeTranslations">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="set" type="typeTranslationSet" minOccurs="1" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="typeTranslationSet">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="format" type="typeFormat" minOccurs="1" maxOccurs="1"/>
            <xs:element name="protect" type="typeProtect" minOccurs="0" maxOccurs="1"/>
            <xs:element name="filter" type="typeFilter" minOccurs="0" maxOccurs="1"/>
            <xs:element name="rules" type="typeRules" minOccurs="0" maxOccurs="1"/>
            <xs:element name="styles" type="typeStyle" minOccurs="0" maxOccurs="1"/>
            <xs:element name="locales" type="typeLocales" minOccurs="1" maxOccurs="1"/>
            <xs:element name="coverage" type="typeCoverage" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- ================================================================================================================================ -->
    <!-- PROTECTION -->

    <xs:complexType name="typeProtect">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="marker" type="typeProtectMarker" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="term" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="typeProtectMarker">
        <xs:attribute name="start" type="xs:string" use="required"/>
        <xs:attribute name="end" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- ================================================================================================================================ -->
    <!-- FILTER -->

    <xs:complexType name="typeFilter">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="include" type="typeFilterKey" minOccurs="0" maxOccurs="1"/>
            <xs:element name="exclude" type="typeFilterKey" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="typeFilterKey">
        <xs:choice minOccurs="0" maxOccurs="1">
            <xs:element name="key" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>

    <!-- ================================================================================================================================ -->
    <!-- COVERAGE -->

    <xs:complexType name="typeCoverage">
        <xs:sequence>
            <xs:element name="locale" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="name" type="xs:string" use="required"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="minCoverage" type="xs:integer" use="optional"/>
    </xs:complexType>

    <!-- ================================================================================================================================ -->
    <!-- RULES -->

    <xs:complexType name="typeRules">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="nestingDepth" type="xs:int" minOccurs="0" maxOccurs="1"/>
            <xs:element name="keyLength" type="xs:int" minOccurs="0" maxOccurs="1"/>
            <xs:element name="disallowedTexts" type="typeDisallowedText" minOccurs="0" maxOccurs="1"/>
            <xs:element name="duplicateContent" type="typeDuplicateContent" minOccurs="0" maxOccurs="1"/>
            <xs:element name="emptyContent" type="typeEmptyContent" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="typeDisallowedText">
        <xs:choice minOccurs="0" maxOccurs="1">
            <xs:element name="text" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="typeDuplicateContent">
        <xs:sequence>
            <xs:element name="locale" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:boolean">
                            <xs:attribute name="name" type="xs:string" use="required"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="typeEmptyContent">
        <xs:sequence>
            <xs:element name="key" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="locale" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!-- ================================================================================================================================ -->
    <!-- STYLE -->

    <xs:complexType name="typeStyle">
        <xs:sequence>
            <xs:element name="style" type="styleOptions" minOccurs="1" maxOccurs="unbounded"/>
            <xs:element name="ignore" type="styleIgnore" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="styleOptions">
        <xs:simpleContent>
            <xs:extension base="styleOptionValueType">
                <xs:attribute name="level" type="xs:int" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="styleOptionValueType">
        <xs:restriction base="xs:token">
            <xs:enumeration value="none"/>
            <xs:enumeration value="camel"/>
            <xs:enumeration value="snake"/>
            <xs:enumeration value="kebab"/>
            <xs:enumeration value="lower"/>
            <xs:enumeration value="upper"/>
            <xs:enumeration value="pascal"/>
            <xs:enumeration value="start"/>
            <xs:enumeration value="number"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="styleIgnore">
        <xs:sequence>
            <xs:element name="key" type="styleIgnoreKey" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="styleIgnoreKey">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="fqp" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- ================================================================================================================================ -->
    <!-- LOCALES -->

    <xs:complexType name="typeLocales">
        <xs:sequence>
            <xs:element name="locale" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="name" type="xs:string" use="required"/>
                            <xs:attribute name="base" type="xs:boolean" use="optional"/>
                            <xs:attribute name="iniSection" type="xs:string" use="optional"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="basePath" type="xs:string" use="optional"/>
    </xs:complexType>

    <!-- ================================================================================================================================ -->
    <!-- STORAGE FORMATS -->

    <xs:complexType name="typeFormat">
        <xs:choice minOccurs="1" maxOccurs="1">
            <xs:element name="json" type="typeFormatJSON" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="ini" type="typeFormatINI" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="po" type="typeFormatPO" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="php" type="typeFormatPHP" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="yaml" type="typeFormatYAML" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="resx" type="typeFormatRESX" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="strings" type="typeFormatStrings" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="shopware6" type="typeFormatShopware6" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="typeFormatJSON">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="indent" type="xs:string" use="optional"/>
                <xs:attribute name="sort" type="xs:boolean" use="optional"/>
                <xs:attribute name="eol-last" type="xs:boolean" use="optional"/>
                <xs:attribute name="nested" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="typeFormatINI">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="sort" type="xs:boolean" use="optional"/>
                <xs:attribute name="eol-last" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="typeFormatPO">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="eol-last" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="typeFormatPHP">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="indent" type="xs:string" use="optional"/>
                <xs:attribute name="sort" type="xs:boolean" use="optional"/>
                <xs:attribute name="eol-last" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="typeFormatYAML">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="indent" type="xs:string" use="optional"/>
                <xs:attribute name="sort" type="xs:boolean" use="optional"/>
                <xs:attribute name="eol-last" type="xs:boolean" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="typeFormatRESX">
        <xs:simpleContent>
            <xs:extension base="xs:string">
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="typeFormatStrings">
        <xs:simpleContent>
            <xs:extension base="xs:string">
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="typeFormatShopware6">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="type" type="typeShopware6" use="required"/>
                <xs:attribute name="file" type="xs:string" use="optional"/>
                <xs:attribute name="entity" type="xs:string" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="typeShopware6">
        <xs:restriction base="xs:token">
            <xs:enumeration value="config"/>
            <xs:enumeration value="entity"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- ================================================================================================================================ -->

</xs:schema>
